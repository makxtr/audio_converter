package converter

import (
	"fmt"
	"os/exec"
	_ "path/filepath"
	"sync"
)

// –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –∫–æ–º–∞–Ω–¥
type CommandRunner interface {
	Run(cmd string, args ...string) error
}

// –†–µ–∞–ª—å–Ω–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç exec.Command)
type RealCommandRunner struct{}

func (r RealCommandRunner) Run(cmd string, args ...string) error {
	command := exec.Command(cmd, args...)
	return command.Run()
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ —Ñ–∞–π–ª–∞ –≤ WAV
func ConvertToWav(inputFile string, runner CommandRunner, wg *sync.WaitGroup, ch chan string) {
	defer wg.Done()

	outputFile := inputFile[:len(inputFile)-4] + ".wav"

	// –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–π CommandRunner
	err := runner.Run("ffmpeg", "-i", inputFile, outputFile, "-y")
	if err != nil {
		ch <- fmt.Sprintf("–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ %s: %v", inputFile, err)
		return
	}

	ch <- fmt.Sprintf("‚úÖ –£—Å–ø–µ—à–Ω–æ —Å–∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω: %s ‚Üí %s", inputFile, outputFile)
}

//func main() {
//	// –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –∏–∑ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
//	files, err := filepath.Glob("*.mp3") // –ò—â–µ–º –≤—Å–µ MP3-—Ñ–∞–π–ª—ã
//	if err != nil {
//		fmt.Println("–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤:", err)
//		return
//	}
//
//	if len(files) == 0 {
//		fmt.Println("‚ö† –ù–µ—Ç MP3-—Ñ–∞–π–ª–æ–≤ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏.")
//		return
//	}
//
//	// –°–æ–∑–¥–∞—ë–º WaitGroup –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –≥–æ—Ä—É—Ç–∏–Ω
//	var wg sync.WaitGroup
//	// –ö–∞–Ω–∞–ª –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞
//	ch := make(chan string, len(files))
//
//	runner := RealCommandRunner{}
//
//	// –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –≤ –≥–æ—Ä—É—Ç–∏–Ω–∞—Ö
//	for _, file := range files {
//		wg.Add(1)
//		go convertToWav(file, runner, &wg, ch)
//	}
//
//	// –ó–∞–∫—Ä—ã–≤–∞–µ–º –∫–∞–Ω–∞–ª –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤—Å–µ—Ö –≥–æ—Ä—É—Ç–∏–Ω
//	go func() {
//		wg.Wait()
//		close(ch)
//	}()
//
//	// –í—ã–≤–æ–¥–∏–º —Å—Ç–∞—Ç—É—Å—ã –∏–∑ –∫–∞–Ω–∞–ª–∞
//	for msg := range ch {
//		fmt.Println(msg)
//	}
//
//	fmt.Println("üéµ –í—Å–µ —Ñ–∞–π–ª—ã –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã!")
//}
